<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Golang梦工厂</title>
        <link>https://asong2020.github.io/</link>
        <description>asong的成长记录小屋</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>741896420@qq.com (asong)</managingEditor>
            <webMaster>741896420@qq.com (asong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 21 Sep 2021 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://asong2020.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>聊一聊Go语言中的零值，它有什么用？</title>
    <link>https://asong2020.github.io/go%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E9%9B%B6%E5%80%BC/</link>
    <pubDate>Tue, 21 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://asong2020.github.io/go%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E9%9B%B6%E5%80%BC/</guid>
    <description><![CDATA[背景 哈喽，大家好，我是asong。今天与大家聊一聊Go语言中的零值。大学时期我是一名C语言爱好者，工作了以后感觉Go语言和C语言很像，所以选]]></description>
</item><item>
    <title>Go语言如何操纵Kafka保证无消息丢失</title>
    <link>https://asong2020.github.io/go%E8%AF%AD%E8%A8%80%E5%A6%82%E4%BD%95%E6%93%8D%E7%BA%B5kafka%E4%BF%9D%E8%AF%81%E6%97%A0%E6%B6%88%E6%81%AF%E4%B8%A2%E5%A4%B1/</link>
    <pubDate>Sun, 12 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://asong2020.github.io/go%E8%AF%AD%E8%A8%80%E5%A6%82%E4%BD%95%E6%93%8D%E7%BA%B5kafka%E4%BF%9D%E8%AF%81%E6%97%A0%E6%B6%88%E6%81%AF%E4%B8%A2%E5%A4%B1/</guid>
    <description><![CDATA[背景 目前一些互联网公司会使用消息队列来做核心业务，因为是核心业务，所以对数据的最后一致性比较敏感，如果中间出现数据丢失，就会引来用户的投诉，]]></description>
</item><item>
    <title>微服务架构下的熔断框架:hystrix-go</title>
    <link>https://asong2020.github.io/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%8B%E7%9A%84%E7%86%94%E6%96%AD%E6%A1%86%E6%9E%B6-hystrixgo/</link>
    <pubDate>Sun, 05 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://asong2020.github.io/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%8B%E7%9A%84%E7%86%94%E6%96%AD%E6%A1%86%E6%9E%B6-hystrixgo/</guid>
    <description><![CDATA[背景 伴随着微服务架构被宣传得如火如茶，一些概念也被推到了我们的面前。一提到微服务，就离不开这几个字：高内聚低耦合；微服务的架构设计最终目的也]]></description>
</item><item>
    <title>源码赏析Go官方扩展信号量库Semaphore</title>
    <link>https://asong2020.github.io/go%E5%AE%98%E6%96%B9%E8%AE%BE%E8%AE%A1%E4%BA%86%E4%B8%80%E4%B8%AA%E4%BF%A1%E5%8F%B7%E9%87%8F%E5%BA%93/</link>
    <pubDate>Sun, 29 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://asong2020.github.io/go%E5%AE%98%E6%96%B9%E8%AE%BE%E8%AE%A1%E4%BA%86%E4%B8%80%E4%B8%AA%E4%BF%A1%E5%8F%B7%E9%87%8F%E5%BA%93/</guid>
    <description><![CDATA[前言 哈喽，大家好，我是asong。在写上一篇文章请勿滥用goroutine时，发现Go语言扩展包提供了一个带权重的信号量库Semaphore]]></description>
</item><item>
    <title>控制goroutine退出和数量的几种方式</title>
    <link>https://asong2020.github.io/%E6%8E%A7%E5%88%B6goroutine%E9%80%80%E5%87%BA%E5%92%8C%E6%95%B0%E9%87%8F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
    <pubDate>Sun, 22 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://asong2020.github.io/%E6%8E%A7%E5%88%B6goroutine%E9%80%80%E5%87%BA%E5%92%8C%E6%95%B0%E9%87%8F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
    <description><![CDATA[前言 哈喽，大家好，我是asong。Go语言中，goroutine的创建成本很低，调度效率很高，人称可以开几百几千万个goroutine，但是]]></description>
</item><item>
    <title>Go语言详解内存对齐</title>
    <link>https://asong2020.github.io/%E8%AF%A6%E8%A7%A3%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/</link>
    <pubDate>Sat, 14 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://asong2020.github.io/%E8%AF%A6%E8%A7%A3%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/</guid>
    <description><![CDATA[前言 哈喽，大家好，我是asong。好久不见，上周停更了一周，因为工作有点忙，好在这周末闲了下来，就赶紧来肝文喽。今天我们来聊一聊一道常见的面]]></description>
</item><item>
    <title>Go语言并发编程包之errgroup</title>
    <link>https://asong2020.github.io/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%8C%85%E4%B9%8Berrgroup/</link>
    <pubDate>Fri, 06 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://asong2020.github.io/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%8C%85%E4%B9%8Berrgroup/</guid>
    <description><![CDATA[前言 哈喽，大家好，我是asong，今天给大家介绍一个并发编程包errgroup，其实这个包就是对sync.waitGroup的封装。我们在之]]></description>
</item><item>
    <title>Go语言的内存逃逸分析</title>
    <link>https://asong2020.github.io/go%E8%AF%AD%E8%A8%80%E7%9A%84%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8%E5%88%86%E6%9E%90/</link>
    <pubDate>Sun, 01 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://asong2020.github.io/go%E8%AF%AD%E8%A8%80%E7%9A%84%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8%E5%88%86%E6%9E%90/</guid>
    <description><![CDATA[前言 哈喽，大家好，我是asong。最近无聊看了一下Go语言的面试八股文，发现面试官都喜欢问内存逃逸这个话题，这个激起了我的兴趣，我对内存逃逸]]></description>
</item><item>
    <title>Go语言反射获取结构体字段的过程</title>
    <link>https://asong2020.github.io/%E5%8F%8D%E5%B0%84%E8%8E%B7%E5%8F%96%E7%BB%93%E6%9E%84%E4%BD%93%E5%AD%97%E6%AE%B5%E8%BF%87%E7%A8%8B/</link>
    <pubDate>Mon, 26 Jul 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://asong2020.github.io/%E5%8F%8D%E5%B0%84%E8%8E%B7%E5%8F%96%E7%BB%93%E6%9E%84%E4%BD%93%E5%AD%97%E6%AE%B5%E8%BF%87%E7%A8%8B/</guid>
    <description><![CDATA[前言 哈喽，大家好，我是asong，今天这篇文章的目的主要是解答一位读者的疑问，涉及知识点是反射和结构体内存布局。我们先看一下读者的问题： 我们]]></description>
</item><item>
    <title>GO语言中的内联函数</title>
    <link>https://asong2020.github.io/go%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%86%85%E8%81%94%E5%87%BD%E6%95%B0/</link>
    <pubDate>Thu, 15 Jul 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://asong2020.github.io/go%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%86%85%E8%81%94%E5%87%BD%E6%95%B0/</guid>
    <description><![CDATA[前言 哈喽，大家好，我是asong。今天与大家来聊一聊内联函数。虽然我们在开发中根本不需要考虑内联函数，其在编译器编译代码时会做优化，但是如果]]></description>
</item></channel>
</rss>
